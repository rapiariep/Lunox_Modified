"use strict";(self.webpackChunkporu_docs=self.webpackChunkporu_docs||[]).push([[4128],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1},o="Introduction",l={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"A stable and powerful Lavalink client with some best features and 100% compatible with Lavalink.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"modules",permalink:"/docs/modules"}},s={},p=[{value:"Getting Started",id:"getting-started",level:2},{value:"Table of contents",id:"table-of-contents",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Implementation Repo",id:"implementation-repo",level:2},{value:"Example usage basic bot",id:"example-usage-basic-bot",level:2},{value:"Need Help?",id:"need-help",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"A stable and powerful Lavalink client with some best features and 100% compatible with Lavalink."),(0,r.kt)("h2",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/Zmmc47Nrh8"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/discord/567705326774779944?style=flat-square",alt:"Discord"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/poru"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/poru?style=flat-square",alt:"npm"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/parasop/poru?style=flat-square",alt:"Github Stars"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/issues-raw/parasop/poru?style=flat-square",alt:"GitHub issues"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/snyk/vulnerabilities/npm/poru?style=flat-square",alt:"Snyk Vulnerabilities for npm package"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/l/poru?style=flat-square",alt:"NPM"})),(0,r.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://poru.parasdocs.tech"},"Documentation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#about"},"About")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/parasop/poru-example"},"Example"))),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"// Using npm\nnpm install poru\n\n// Using yarn\nyarn add poru\n")),(0,r.kt)("h1",{id:"about"},"About"),(0,r.kt)("p",null,"To use you need a configured ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/freyacodes/Lavalink"},"Lavalink")," instance."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Stable client"),(0,r.kt)("li",{parentName:"ul"},"support typescript"),(0,r.kt)("li",{parentName:"ul"},"100% Compatible with Lavalink"),(0,r.kt)("li",{parentName:"ul"},"Object-oriented"),(0,r.kt)("li",{parentName:"ul"},"100% Customizable"),(0,r.kt)("li",{parentName:"ul"},"Easy to setup"),(0,r.kt)("li",{parentName:"ul"},"Inbuilt Queue System"),(0,r.kt)("li",{parentName:"ul"},"Inbuilt support for spotify,apple music and deezer")),(0,r.kt)("h2",{id:"implementation"},"Implementation"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/parasop/poru-example"},"Poru Music")," ",(0,r.kt)("strong",{parentName:"p"},"Example bot as guide for beginning.")),(0,r.kt)("h2",{id:"implementation-repo"},"Implementation Repo"),(0,r.kt)("p",null,"Note : Send pr to add your repo here"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"URL"),(0,r.kt)("th",{parentName:"tr",align:null},"Features"),(0,r.kt)("th",{parentName:"tr",align:null},"Additional Information"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/parasop/poru-example"},"Poru Music")),(0,r.kt)("td",{parentName:"tr",align:null},"Basic example"),(0,r.kt)("td",{parentName:"tr",align:null},"works with latest djs version")))),(0,r.kt)("h2",{id:"example-usage-basic-bot"},"Example usage basic bot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const { Client, GatewayIntentBits } = require("discord.js");\nconst { Poru } = require("poru");\nconst nodes = [\n  {\n    name: "local-node",\n    host: "localhost",\n    port: 2333,\n    password: "youshallnotpass",\n  },\n];\nconst PoruOptions = {\n  library:"discord.js",\n  defaultPlatform: "scsearch",\n};\nconst client = new Client({\n  intents: [\n    GatewayIntentBits.Guilds,\n    GatewayIntentBits.GuildMessages,\n    GatewayIntentBits.GuildVoiceStates,\n    GatewayIntentBits.MessageContent,\n  ],\n});\nclient.poru = new Poru(client, nodes, PoruOptions);\n\nclient.poru.on("trackStart", (player, track) => {\n  const channel = client.channels.cache.get(player.textChannel);\n  return channel.send(`Now playing \\`${track.info.title}\\``);\n});\n\nclient.on("ready", () => {\n  console.log("Ready!");\n  client.poru.init(client);\n});\n\nclient.on("interactionCreate", async (interaction) => {\n  if (!interaction.isChatInputCommand()) return;\n  if (!interaction.member.voice.channel)\n    return interaction.reply({\n      content: `Please connect with voice channel `,\n      ephemeral: true,\n    });\n\n  const track = interaction.options.getString("track");\n\n  const res = await client.poru.resolve({query:track,source:"scsearch",requester:interaction.member});\n\n  if (res.loadType === "LOAD_FAILED") {\n    return interaction.reply("Failed to load track.");\n  } else if (res.loadType === "NO_MATCHES") {\n    return interaction.reply("No source found!");\n  }\n\n  //create connection with discord voice channnel\n  const player = client.poru.createConnection({\n    guildId: interaction.guild.id,\n    voiceChannel: interaction.member.voice.channelId,\n    textChannel: interaction.channel.id,\n    deaf: true,\n  });\n\n  if (res.loadType === "PLAYLIST_LOADED") {\n    for (const track of res.tracks) {\n      track.info.requester = interaction.user;\n      player.queue.add(track);\n    }\n\n    interaction.reply(\n      `${res.playlistInfo.name} has been loaded with ${res.tracks.length}`\n    );\n  } else {\n    const track = res.tracks[0];\n    track.info.requester = interaction.user;\n    player.queue.add(track);\n    interaction.reply(`Queued Track \\n \\`${track.info.title}\\``)\n  }\n\n  if (!player.isPlaying && player.isConnected) player.play();\n});\n\nclient.login("TOKEN");\n')),(0,r.kt)("h2",{id:"need-help"},"Need Help?"),(0,r.kt)("p",null,"Feel free to join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/Zmmc47Nrh8"},"discord server"),", Give us suggestions and advice about errors and new features.\nwith \u2764\ufe0f by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/parasop"},"Paras")," ."))}d.isMDXComponent=!0}}]);